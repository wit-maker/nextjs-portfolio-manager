generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model App {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  github_url  String?
  app_url     String?
  image_url   String?
  published_at DateTime @default(now())
  status      CommonStatus @default(DRAFT)
  languages   Language[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  appLanguages AppLanguage[]
  history     ChangeHistory[]

  @@map("apps")
}

model Language {
  id   Int    @id @default(autoincrement())
  name String @unique
  apps App[]
  appLanguages AppLanguage[]
  projects Project[]
  projectTechnologies ProjectTechnology[]

  @@map("languages")
}

model AppLanguage {
  id         Int      @id @default(autoincrement())
  appId      Int
  languageId Int
  app        App      @relation(fields: [appId], references: [id])
  language   Language @relation(fields: [languageId], references: [id])

  @@unique([appId, languageId])
  @@map("app_languages")
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  status      CommonStatus @default(IN_PROGRESS)
  startDate   DateTime
  endDate     DateTime?
  image_url   String?
  github_url  String?
  demo_url    String?
  technologies Language[]
  tasks       Task[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  projectTechnologies ProjectTechnology[]
  history     ChangeHistory[]

  @@map("projects")
}

model ProjectTechnology {
  id         Int      @id @default(autoincrement())
  projectId  Int
  languageId Int
  project    Project  @relation(fields: [projectId], references: [id])
  language   Language @relation(fields: [languageId], references: [id])

  @@unique([projectId, languageId])
  @@map("project_technologies")
}

model Task {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime?
  status      CommonStatus @default(IN_PROGRESS)
  project     Project    @relation(fields: [projectId], references: [id])
  projectId   Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  history     ChangeHistory[]

  @@map("tasks")
}

model ChangeHistory {
  id          Int      @id @default(autoincrement())
  description String
  timestamp   DateTime @default(now())
  app         App?     @relation(fields: [appId], references: [id])
  appId       Int?
  project     Project? @relation(fields: [projectId], references: [id])
  projectId   Int?
  task        Task?    @relation(fields: [taskId], references: [id])
  taskId      Int?

  @@map("change_history")
}

enum CommonStatus {
  DRAFT
  IN_PROGRESS
  COMPLETED
  ARCHIVED
}